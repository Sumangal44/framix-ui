{
  "name": "credit-card-input",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "input"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { motion } from \"motion/react\"\nimport { CreditCard, Calendar, Lock } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { Input } from \"@/components/ui/input\"\n\nexport default function CreditCardInput() {\n  const [cardNumber, setCardNumber] = useState(\"\")\n  const [expiry, setExpiry] = useState(\"\")\n  const [cvc, setCvc] = useState(\"\")\n  const [focused, setFocused] = useState<string | null>(null)\n  const [flipped, setFlipped] = useState(false)\n\n  // Format card number with spaces\n  const formatCardNumber = (value: string) => {\n    const digits = value.replace(/\\D/g, \"\")\n    const groups = []\n\n    for (let i = 0; i < digits.length && i < 16; i += 4) {\n      groups.push(digits.slice(i, i + 4))\n    }\n\n    return groups.join(\" \")\n  }\n\n  // Format expiry date\n  const formatExpiry = (value: string) => {\n    const digits = value.replace(/\\D/g, \"\")\n\n    if (digits.length <= 2) {\n      return digits\n    }\n\n    return `${digits.slice(0, 2)}/${digits.slice(2, 4)}`\n  }\n\n  // Detect card type based on first digits\n  const getCardType = () => {\n    const digits = cardNumber.replace(/\\D/g, \"\")\n\n    if (/^4/.test(digits)) return \"Visa\"\n    if (/^5[1-5]/.test(digits)) return \"Mastercard\"\n    if (/^3[47]/.test(digits)) return \"Amex\"\n    if (/^6(?:011|5)/.test(digits)) return \"Discover\"\n\n    return \"Unknown\"\n  }\n\n  // Handle CVC focus to flip card\n  const handleCvcFocus = () => {\n    setFocused(\"cvc\")\n    setFlipped(true)\n  }\n\n  const handleCvcBlur = () => {\n    setFocused(null)\n    setFlipped(false)\n  }\n\n  return (\n    <div className=\"w-full max-w-md mx-auto space-y-6\">\n      {/* Card Preview */}\n      <div className=\"relative h-48 w-full perspective\">\n        <motion.div\n          className=\"w-full h-full relative preserve-3d\"\n          animate={{ rotateY: flipped ? 180 : 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          {/* Front of card */}\n          <motion.div\n            className={cn(\n              \"absolute inset-0 rounded-xl p-6 backface-hidden\",\n              \"bg-gradient-to-br from-gray-900 to-gray-800 dark:from-gray-800 dark:to-gray-900\",\n              \"shadow-xl border border-gray-700 dark:border-gray-600\",\n            )}\n          >\n            <div className=\"flex flex-col h-full justify-between\">\n              <div className=\"flex justify-between items-start\">\n                <div className=\"w-12 h-8 rounded bg-gradient-to-br from-gray-400 to-gray-300 opacity-80\" />\n                <motion.p className=\"text-white text-sm font-medium\" animate={{ opacity: cardNumber ? 1 : 0.5 }}>\n                  {getCardType()}\n                </motion.p>\n              </div>\n\n              <motion.div\n                className=\"text-center\"\n                animate={{\n                  scale: focused === \"number\" ? 1.05 : 1,\n                  y: focused === \"number\" ? -5 : 0,\n                }}\n              >\n                <p className=\"text-gray-400 text-xs mb-1\">Card Number</p>\n                <p className=\"text-white text-xl tracking-wider font-mono\">{cardNumber || \"•••• •••• •••• ••••\"}</p>\n              </motion.div>\n\n              <div className=\"flex justify-between\">\n                <motion.div\n                  className=\"text-left\"\n                  animate={{\n                    scale: focused === \"expiry\" ? 1.05 : 1,\n                    y: focused === \"expiry\" ? -2 : 0,\n                  }}\n                >\n                  <p className=\"text-gray-400 text-xs\">Expiry</p>\n                  <p className=\"text-white font-mono\">{expiry || \"MM/YY\"}</p>\n                </motion.div>\n                <div className=\"text-right\">\n                  <p className=\"text-gray-400 text-xs\">Cardholder</p>\n                  <p className=\"text-white font-mono\">YOUR NAME</p>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Back of card */}\n          <motion.div\n            className={cn(\n              \"absolute inset-0 rounded-xl p-6 backface-hidden rotateY-180\",\n              \"bg-gradient-to-br from-gray-800 to-gray-900 dark:from-gray-900 dark:to-black\",\n              \"shadow-xl border border-gray-700 dark:border-gray-600\",\n            )}\n          >\n            <div className=\"w-full h-10 bg-gray-700 dark:bg-gray-800 mt-4\" />\n            <div className=\"mt-6 flex justify-end\">\n              <motion.div\n                className=\"bg-white dark:bg-gray-200 h-10 w-3/4 rounded flex items-center px-3 justify-end\"\n                animate={{\n                  scale: focused === \"cvc\" ? 1.05 : 1,\n                }}\n              >\n                <p className=\"text-gray-900 font-mono tracking-widest\">{cvc || \"•••\"}</p>\n              </motion.div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n\n      {/* Input Fields */}\n      <div className=\"space-y-4\">\n        <div className=\"relative\">\n          <CreditCard className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500 dark:text-gray-400\" />\n          <Input\n            type=\"text\"\n            value={cardNumber}\n            onChange={(e) => setCardNumber(formatCardNumber(e.target.value))}\n            onFocus={() => setFocused(\"number\")}\n            onBlur={() => setFocused(null)}\n            placeholder=\"Card number\"\n            maxLength={19}\n            className=\"pl-10\"\n          />\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"relative\">\n            <Calendar className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500 dark:text-gray-400\" />\n            <Input\n              type=\"text\"\n              value={expiry}\n              onChange={(e) => setExpiry(formatExpiry(e.target.value))}\n              onFocus={() => setFocused(\"expiry\")}\n              onBlur={() => setFocused(null)}\n              placeholder=\"MM/YY\"\n              maxLength={5}\n              className=\"pl-10\"\n            />\n          </div>\n\n          <div className=\"relative\">\n            <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500 dark:text-gray-400\" />\n            <Input\n              type=\"text\"\n              value={cvc}\n              onChange={(e) => setCvc(e.target.value.replace(/\\D/g, \"\").slice(0, 3))}\n              onFocus={handleCvcFocus}\n              onBlur={handleCvcBlur}\n              placeholder=\"CVC\"\n              maxLength={3}\n              className=\"pl-10\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <style jsx global>{`\n        .perspective {\n          perspective: 1000px;\n        }\n        .preserve-3d {\n          transform-style: preserve-3d;\n        }\n        .backface-hidden {\n          backface-visibility: hidden;\n        }\n        .rotateY-180 {\n          transform: rotateY(180deg);\n        }\n      `}</style>\n    </div>\n  )\n}\n",
      "path": "/components/framixui/credit-card-input.tsx",
      "target": "/components/codesnippetui/credit-card-input.tsx"
    }
  ]
}