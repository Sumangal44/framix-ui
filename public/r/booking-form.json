{
  "name": "booking-form",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "calendar",
    "popover"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { motion, AnimatePresence } from \"motion/react\"\nimport { Calendar, Clock, Users, ArrowRight, ArrowLeft, Check } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar as CalendarComponent } from \"@/components/ui/calendar\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\"\nimport { format } from \"date-fns\"\n\nexport default function BookingForm() {\n  const [step, setStep] = useState(1)\n  const [date, setDate] = useState<Date | undefined>(undefined)\n  const [time, setTime] = useState<string | null>(null)\n  const [guests, setGuests] = useState(2)\n  const [name, setName] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isComplete, setIsComplete] = useState(false)\n\n  const timeSlots = [\"17:00\", \"17:30\", \"18:00\", \"18:30\", \"19:00\", \"19:30\", \"20:00\", \"20:30\", \"21:00\"]\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true)\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 1500))\n    setIsSubmitting(false)\n    setIsComplete(true)\n  }\n\n  const nextStep = () => setStep(step + 1)\n  const prevStep = () => setStep(step - 1)\n\n  const isStepValid = () => {\n    if (step === 1) return !!date && !!time\n    if (step === 2) return guests > 0\n    if (step === 3) return name.trim() !== \"\" && phone.trim() !== \"\"\n    return false\n  }\n\n  return (\n    <div className=\"w-full max-w-md mx-auto\">\n      <div className=\"bg-white dark:bg-black/5 rounded-2xl shadow-lg border border-gray-100 dark:border-white/10 overflow-hidden backdrop-blur-sm\">\n        {/* Progress Bar */}\n        <div className=\"relative h-1 bg-gray-100 dark:bg-white/5\">\n          <motion.div\n            className=\"absolute left-0 top-0 h-full bg-gradient-to-r from-blue-500 to-blue-600\"\n            initial={{ width: \"0%\" }}\n            animate={{ width: `${(step / 3) * 100}%` }}\n            transition={{ duration: 0.3 }}\n          />\n        </div>\n\n        {/* Header */}\n        <div className=\"p-8 pb-0\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h3 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n              {isComplete ? \"Reservation Complete\" : \"Make a Reservation\"}\n            </h3>\n            <div className=\"flex space-x-2\">\n              {[1, 2, 3].map((i) => (\n                <motion.div\n                  key={i}\n                  className={cn(\n                    \"w-2 h-2 rounded-full transition-colors duration-300\",\n                    step >= i ? \"bg-blue-500\" : \"bg-gray-200 dark:bg-white/20\",\n                  )}\n                  animate={{\n                    scale: step === i ? [1, 1.2, 1] : 1,\n                  }}\n                  transition={{\n                    duration: 0.5,\n                    repeat: step === i ? Number.POSITIVE_INFINITY : 0,\n                    repeatDelay: 1.5,\n                  }}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"px-8 pb-8\">\n          <AnimatePresence mode=\"wait\">\n            {isComplete ? (\n              <motion.div\n                key=\"complete\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.3 }}\n                className=\"flex flex-col items-center py-8\"\n              >\n                <div className=\"w-16 h-16 bg-green-50 dark:bg-green-500/10 rounded-full flex items-center justify-center mb-6\">\n                  <Check className=\"h-8 w-8 text-green-600 dark:text-green-400\" />\n                </div>\n                <h4 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-3\">Reservation Confirmed</h4>\n                <p className=\"text-gray-600 dark:text-gray-300 text-center mb-6\">\n                  We've sent a confirmation to your phone.\n                </p>\n                <div className=\"bg-gray-50 dark:bg-white/5 rounded-xl p-6 w-full border border-gray-100 dark:border-white/10\">\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-500 dark:text-gray-400\">Date:</span>\n                      <span className=\"text-gray-900 dark:text-white font-medium\">\n                        {date ? format(date, \"EEEE, MMMM d, yyyy\") : \"\"}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-500 dark:text-gray-400\">Time:</span>\n                      <span className=\"text-gray-900 dark:text-white font-medium\">{time}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-500 dark:text-gray-400\">Guests:</span>\n                      <span className=\"text-gray-900 dark:text-white font-medium\">{guests} people</span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ) : (\n              <>\n                {step === 1 && (\n                  <motion.div\n                    key=\"step1\"\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -20 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <h4 className=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-6\">Select date & time</h4>\n\n                    <div className=\"space-y-6\">\n                      <Popover>\n                        <PopoverTrigger asChild>\n                          <Button\n                            variant=\"outline\"\n                            className={cn(\n                              \"w-full justify-start text-left font-normal h-12 border-gray-200 dark:border-white/20\",\n                              \"bg-white dark:bg-white/5 hover:bg-gray-50 dark:hover:bg-white/10\",\n                              !date && \"text-gray-400 dark:text-gray-500\",\n                            )}\n                          >\n                            <Calendar className=\"mr-3 h-4 w-4\" />\n                            {date ? format(date, \"PPP\") : \"Select date\"}\n                          </Button>\n                        </PopoverTrigger>\n                        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                          <CalendarComponent\n                            mode=\"single\"\n                            selected={date}\n                            onSelect={setDate}\n                            disabled={(date) => date < new Date()}\n                            initialFocus\n                          />\n                        </PopoverContent>\n                      </Popover>\n\n                      <div>\n                        <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-3 block\">\n                          Select time\n                        </label>\n                        <div className=\"grid grid-cols-3 gap-3\">\n                          {timeSlots.map((slot) => (\n                            <Button\n                              key={slot}\n                              type=\"button\"\n                              variant=\"outline\"\n                              className={cn(\n                                \"h-12 border-gray-200 dark:border-white/20\",\n                                \"bg-white dark:bg-white/5 hover:bg-gray-50 dark:hover:bg-white/10\",\n                                time === slot &&\n                                  \"bg-blue-50 text-blue-600 border-blue-200 dark:bg-blue-500/10 dark:text-blue-400 dark:border-blue-500/30\",\n                              )}\n                              onClick={() => setTime(slot)}\n                            >\n                              <Clock className=\"h-3 w-3 mr-2\" />\n                              {slot}\n                            </Button>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {step === 2 && (\n                  <motion.div\n                    key=\"step2\"\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -20 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <h4 className=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-6\">Number of guests</h4>\n\n                    <div className=\"flex flex-col items-center\">\n                      <div className=\"flex items-center justify-center mb-8\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"icon\"\n                          onClick={() => setGuests(Math.max(1, guests - 1))}\n                          disabled={guests <= 1}\n                          className=\"h-12 w-12 rounded-full border-gray-200 dark:border-white/20 bg-white dark:bg-white/5 hover:bg-gray-50 dark:hover:bg-white/10\"\n                        >\n                          <span className=\"text-lg font-medium\">-</span>\n                        </Button>\n\n                        <div className=\"w-32 mx-6 text-center\">\n                          <div className=\"text-4xl font-bold text-gray-900 dark:text-white\">{guests}</div>\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">Guests</div>\n                        </div>\n\n                        <Button\n                          variant=\"outline\"\n                          size=\"icon\"\n                          onClick={() => setGuests(Math.min(10, guests + 1))}\n                          disabled={guests >= 10}\n                          className=\"h-12 w-12 rounded-full border-gray-200 dark:border-white/20 bg-white dark:bg-white/5 hover:bg-gray-50 dark:hover:bg-white/10\"\n                        >\n                          <span className=\"text-lg font-medium\">+</span>\n                        </Button>\n                      </div>\n\n                      <div className=\"flex items-center space-x-2 text-gray-500 dark:text-gray-400 text-sm\">\n                        <Users className=\"h-4 w-4\" />\n                        <span>Maximum 10 guests per reservation</span>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {step === 3 && (\n                  <motion.div\n                    key=\"step3\"\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    exit={{ opacity: 0, x: -20 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <h4 className=\"text-lg font-medium text-gray-700 dark:text-gray-300 mb-6\">Your information</h4>\n\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-2 block\">\n                          Full name\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={name}\n                          onChange={(e) => setName(e.target.value)}\n                          className={cn(\n                            \"w-full px-4 py-3 rounded-lg\",\n                            \"bg-white dark:bg-white/5\",\n                            \"border border-gray-200 dark:border-white/20\",\n                            \"focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 dark:focus:border-blue-400\",\n                            \"text-gray-900 dark:text-gray-100\",\n                            \"placeholder:text-gray-400 dark:placeholder:text-gray-500\",\n                          )}\n                          placeholder=\"Enter your name\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-2 block\">\n                          Phone number\n                        </label>\n                        <input\n                          type=\"tel\"\n                          value={phone}\n                          onChange={(e) => setPhone(e.target.value)}\n                          className={cn(\n                            \"w-full px-4 py-3 rounded-lg\",\n                            \"bg-white dark:bg-white/5\",\n                            \"border border-gray-200 dark:border-white/20\",\n                            \"focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 dark:focus:border-blue-400\",\n                            \"text-gray-900 dark:text-gray-100\",\n                            \"placeholder:text-gray-400 dark:placeholder:text-gray-500\",\n                          )}\n                          placeholder=\"Enter your phone number\"\n                        />\n                      </div>\n\n                      <div className=\"bg-blue-50 dark:bg-blue-500/10 p-4 rounded-lg border border-blue-100 dark:border-blue-500/20\">\n                        <h5 className=\"text-sm font-semibold text-blue-800 dark:text-blue-300 mb-3\">\n                          Reservation Summary\n                        </h5>\n                        <div className=\"text-sm text-blue-700 dark:text-blue-400 space-y-2\">\n                          <div className=\"flex justify-between\">\n                            <span>Date:</span>\n                            <span className=\"font-medium\">{date ? format(date, \"MMM d, yyyy\") : \"\"}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Time:</span>\n                            <span className=\"font-medium\">{time}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span>Guests:</span>\n                            <span className=\"font-medium\">{guests} people</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Navigation Buttons */}\n                <div className=\"flex justify-between mt-8\">\n                  {step > 1 ? (\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      onClick={prevStep}\n                      className=\"text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-white/10\"\n                    >\n                      <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                      Back\n                    </Button>\n                  ) : (\n                    <div></div>\n                  )}\n\n                  <Button\n                    type=\"button\"\n                    disabled={!isStepValid() || isSubmitting}\n                    onClick={step < 3 ? nextStep : handleSubmit}\n                    className={cn(\n                      \"bg-blue-600 hover:bg-blue-700 text-white font-medium px-6\",\n                      \"dark:bg-blue-500 dark:hover:bg-blue-600\",\n                      \"disabled:opacity-50 disabled:cursor-not-allowed\",\n                      \"shadow-lg shadow-blue-500/25\",\n                    )}\n                  >\n                    {isSubmitting ? (\n                      <>Processing...</>\n                    ) : step < 3 ? (\n                      <>\n                        Next\n                        <ArrowRight className=\"h-4 w-4 ml-2\" />\n                      </>\n                    ) : (\n                      \"Complete Reservation\"\n                    )}\n                  </Button>\n                </div>\n              </>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "path": "/components/framixui/booking-form.tsx",
      "target": "/components/codesnippetui/booking-form.tsx"
    }
  ]
}