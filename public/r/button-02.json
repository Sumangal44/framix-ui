{
  "name": "button-02",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport { motion, AnimatePresence } from \"motion/react\"\nimport { Bell } from \"lucide-react\"\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\n\nexport default function Button02() {\n  const [hasNotification, setHasNotification] = useState(true)\n  const [isHovered, setIsHovered] = useState(false)\n\n  // Reset notification after some time\n  useEffect(() => {\n    if (!hasNotification) {\n      const timer = setTimeout(() => {\n        setHasNotification(true)\n      }, 5000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [hasNotification])\n\n  return (\n    <Button\n      className={cn(\n        \"relative min-w-40\",\n        \"bg-blue-100 dark:bg-blue-900\",\n        \"hover:bg-blue-200 dark:hover:bg-blue-800\",\n        \"text-blue-600 dark:text-blue-300\",\n        \"border border-blue-300 dark:border-blue-700\",\n      )}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() => setHasNotification(false)}\n    >\n      <span className=\"relative flex items-center justify-center gap-2\">\n        <motion.div\n          animate={{\n            rotate: isHovered && hasNotification ? [0, -10, 10, -10, 10, 0] : 0,\n          }}\n          transition={{\n            duration: 0.5,\n            ease: \"easeInOut\",\n          }}\n          className=\"relative\"\n        >\n          <Bell className=\"w-4 h-4\" />\n\n          <AnimatePresence>\n            {hasNotification && (\n              <motion.div\n                initial={{ scale: 0, opacity: 0 }}\n                animate={{\n                  scale: 1,\n                  opacity: 1,\n                }}\n                exit={{ scale: 0, opacity: 0 }}\n                className={cn(\n                  \"absolute -top-1 -right-1 w-2.5 h-2.5 rounded-full\",\n                  \"bg-red-500 dark:bg-red-400\",\n                  \"ring-2 ring-blue-100 dark:ring-blue-900\",\n                )}\n              >\n                <motion.div\n                  animate={{\n                    scale: [1, 1.5, 1],\n                    opacity: [1, 0.8, 1],\n                  }}\n                  transition={{\n                    repeat: Number.POSITIVE_INFINITY,\n                    duration: 2,\n                    ease: \"easeInOut\",\n                  }}\n                  className=\"absolute inset-0 rounded-full bg-red-500 dark:bg-red-400 opacity-60\"\n                />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </motion.div>\n\n        {hasNotification ? \"New Notification\" : \"No Notifications\"}\n      </span>\n    </Button>\n  )\n}\n",
      "path": "/components/framixui/button/button-02.tsx",
      "target": "/components/framixui/button-02.tsx"
    }
  ]
}