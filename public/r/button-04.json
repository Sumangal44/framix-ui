{
  "name": "button-04",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\n\nimport type React from \"react\"\nimport { motion, useAnimationControls } from \"motion/react\"\nimport { MousePointer, Sparkles } from \"lucide-react\"\nimport { useState, useEffect } from \"react\"\n\nexport default function Button04() {\n  const [ripples, setRipples] = useState<{ id: number; x: number; y: number }[]>([])\n  const [isHovered, setIsHovered] = useState(false)\n  const [particles, setParticles] = useState<{ id: number; x: number; y: number; delay: number }[]>([])\n  const buttonControls = useAnimationControls()\n\n  // Generate floating particles\n  useEffect(() => {\n    if (isHovered) {\n      const newParticles = Array.from({ length: 8 }, (_, i) => ({\n        id: Date.now() + i,\n        x: Math.random() * 160,\n        y: Math.random() * 48,\n        delay: Math.random() * 0.5\n      }))\n      setParticles(newParticles)\n    } else {\n      setParticles([])\n    }\n  }, [isHovered])\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const button = e.currentTarget\n    const rect = button.getBoundingClientRect()\n    const x = e.clientX - rect.left\n    const y = e.clientY - rect.top\n\n    const newRipple = {\n      id: Date.now(),\n      x,\n      y,\n    }\n\n    setRipples([...ripples, newRipple])\n\n    setTimeout(() => {\n      setRipples((current) => current.filter((ripple) => ripple.id !== newRipple.id))\n    }, 1500)\n\n    buttonControls.start({\n      scale: [1, 0.95, 1.05, 1],\n      rotateX: [0, -5, 5, 0],\n      transition: { duration: 0.4, ease: \"easeInOut\" },\n    })\n  }\n\n  return (\n    <div >\n      {/* Ambient background effects */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        {[...Array(20)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-1 h-1 bg-white/20 rounded-full\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n            }}\n            animate={{\n              y: [0, -100, 0],\n              opacity: [0, 1, 0],\n              scale: [0, 1, 0],\n            }}\n            transition={{\n              duration: Math.random() * 3 + 2,\n              repeat: Infinity,\n              delay: Math.random() * 2,\n            }}\n          />\n        ))}\n      </div>\n\n      <motion.div \n        animate={buttonControls}\n        style={{ perspective: 1000 }}\n      >\n        <motion.button\n          className=\"relative min-w-40 h-12 px-6 overflow-hidden group cursor-pointer\"\n          onClick={handleClick}\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n          whileHover={{ \n            scale: 1.05,\n            rotateY: 5,\n            z: 50\n          }}\n          whileTap={{ \n            scale: 0.95,\n            rotateX: -10\n          }}\n          transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n          style={{\n            background: \"linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)\",\n            backgroundSize: \"300% 300%\",\n            transformStyle: \"preserve-3d\"\n          }}\n        >\n          {/* Animated gradient background */}\n          <motion.div\n            className=\"absolute inset-0 opacity-80\"\n            animate={{\n              backgroundPosition: isHovered ? [\"0% 0%\", \"100% 100%\"] : [\"100% 100%\", \"0% 0%\"]\n            }}\n            transition={{ duration: 3, repeat: Infinity, repeatType: \"reverse\" }}\n            style={{\n              background: \"linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #ffeaa7, #dda0dd)\",\n              backgroundSize: \"400% 400%\",\n              borderRadius: \"12px\"\n            }}\n          />\n\n          {/* Glassmorphism overlay */}\n          <div className=\"absolute inset-0 bg-white/10 backdrop-blur-xl border border-white/20 rounded-xl shadow-2xl\" />\n\n          {/* Holographic effect */}\n          <motion.div\n            className=\"absolute inset-0 rounded-xl\"\n            animate={{\n              background: isHovered \n                ? [\"linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.3) 50%, transparent 70%)\",\n                   \"linear-gradient(225deg, transparent 30%, rgba(255,255,255,0.3) 50%, transparent 70%)\"]\n                : \"transparent\"\n            }}\n            transition={{ duration: 1.5, repeat: Infinity }}\n          />\n\n          {/* Dynamic ripple effects */}\n          {ripples.map((ripple) => (\n            <motion.div\n              key={ripple.id}\n              className=\"absolute rounded-full pointer-events-none\"\n              initial={{\n                width: 0,\n                height: 0,\n                x: ripple.x,\n                y: ripple.y,\n                opacity: 1,\n              }}\n              animate={{\n                width: [0, 100, 200],\n                height: [0, 100, 200],\n                x: ripple.x - 100,\n                y: ripple.y - 100,\n                opacity: [1, 0.6, 0],\n              }}\n              transition={{ duration: 1.5, ease: \"easeOut\" }}\n              style={{\n                background: \"radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0.4) 30%, rgba(255,255,255,0.1) 60%, transparent 100%)\",\n                filter: \"blur(1px)\"\n              }}\n            />\n          ))}\n\n          {/* Floating particles */}\n          {particles.map((particle) => (\n            <motion.div\n              key={particle.id}\n              className=\"absolute w-1 h-1 pointer-events-none\"\n              style={{\n                left: particle.x,\n                top: particle.y,\n                background: \"radial-gradient(circle, #fff 0%, transparent 70%)\"\n              }}\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{\n                opacity: [0, 1, 0],\n                scale: [0, 1, 0],\n                y: [0, -20],\n                x: [0, Math.random() * 20 - 10]\n              }}\n              transition={{\n                duration: 2,\n                delay: particle.delay,\n                repeat: Infinity,\n              }}\n            />\n          ))}\n\n          {/* Neon glow effect */}\n          <div \n            className=\"absolute inset-0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n            style={{\n              boxShadow: \"inset 0 0 20px rgba(255,255,255,0.2), 0 0 40px rgba(138, 43, 226, 0.4), 0 0 80px rgba(138, 43, 226, 0.2)\"\n            }}\n          />\n\n          {/* Content */}\n          <span className=\"relative flex items-center justify-center gap-3 font-semibold text-white text-sm tracking-wider z-10\">\n            <motion.div\n              animate={isHovered ? {\n                rotate: [0, 360],\n                scale: [1, 1.2, 1],\n              } : {}}\n              transition={{\n                duration: 2,\n                repeat: isHovered ? Infinity : 0,\n                ease: \"linear\"\n              }}\n            >\n              <div className=\"relative\">\n                <MousePointer className=\"w-4 h-4 drop-shadow-lg\" />\n                {isHovered && (\n                  <motion.div\n                    className=\"absolute -top-1 -right-1\"\n                    animate={{\n                      scale: [0, 1, 0],\n                      rotate: [0, 180, 360]\n                    }}\n                    transition={{\n                      duration: 1,\n                      repeat: Infinity,\n                      delay: 0.5\n                    }}\n                  >\n                    <Sparkles className=\"w-2 h-2 text-yellow-300\" />\n                  </motion.div>\n                )}\n              </div>\n            </motion.div>\n            \n            <motion.span\n              animate={{\n                textShadow: isHovered \n                  ? [\"0 0 10px rgba(255,255,255,0.8)\", \"0 0 20px rgba(255,255,255,0.4)\", \"0 0 10px rgba(255,255,255,0.8)\"]\n                  : \"0 0 5px rgba(255,255,255,0.3)\"\n              }}\n              transition={{ duration: 1.5, repeat: Infinity }}\n            >\n              CLICK ME\n            </motion.span>\n          </span>\n\n          {/* Edge lighting */}\n          <motion.div\n            className=\"absolute inset-0 rounded-xl border-2 border-transparent\"\n            animate={{\n              borderImage: isHovered\n                ? \"linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #ffeaa7) 1\"\n                : \"none\"\n            }}\n            style={{\n              borderImageSlice: 1,\n            }}\n          />\n\n          {/* Corner accents */}\n          {[...Array(4)].map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute w-3 h-3 border-2 border-white/50\"\n              style={{\n                top: i < 2 ? -1 : \"auto\",\n                bottom: i >= 2 ? -1 : \"auto\",\n                left: i % 2 === 0 ? -1 : \"auto\",\n                right: i % 2 === 1 ? -1 : \"auto\",\n                borderRadius: i % 2 === 0 ? \"0 0 4px 0\" : \"0 0 0 4px\"\n              }}\n              animate={{\n                opacity: isHovered ? [0.5, 1, 0.5] : 0.3,\n                scale: isHovered ? [1, 1.5, 1] : 1\n              }}\n              transition={{\n                duration: 1.5,\n                repeat: Infinity,\n                delay: i * 0.2\n              }}\n            />\n          ))}\n        </motion.button>\n      </motion.div>\n    </div>\n  )\n}",
      "path": "/components/framixui/button/button-04.tsx",
      "target": "/components/framixui/button-04.tsx"
    }
  ]
}